<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--<mapper namespace="helloWorld.EmployeeMapper">-->
    <!--
    namespace:名称空间
    一般以全类名再在结尾加上Mapper的形式写出，确保其唯一性
    id:执行sql操作的唯一标识
    可以直接写一个简略的形式，比如selectEmp，但是这种写法如果有其他文件中的sql也叫这个名字，就会产生冲突
    因此更加推荐namespace+简略id的写法。
    resultType:返回值类型，要用全类名的方式写出(全类名是:包名.子包名.类名)
    为什么要以全类名方式写出?
    因为在Idea中一个模块(Module)就代表一个项目，在一个模块中不经过配置不能引用另一个模块的类，因此在两个模块中，
    每个模块可以有与另一个模块同名的包和类，但是在一个模块的两个同名包下,不能有同名的类，只能有不同的包下的同名类
    或者是同名包下的不同名类，因此包名+类名的方式能在一个模块下唯一的确定一个类。
    #{id}:从传递过来的参数中取出id值
    -->
<!--    <select id="helloWorld.EmployeeMapper.selectEmp" resultType="helloWorld.Employee">-->
<!--        select id,last_name lastName,email,gender  from tbl_employee where id = #{id}-->
<!--    </select>-->
<!--        接口式编程:更推荐使用
            namespace:指定为接口的全类名
            id:指定为接口的实现方法名-->
    <mapper namespace="dao.EmployeeMapper">
        <select id="getEmpById" resultType="bean.Employee">
            select id,last_name lastName,email,gender from tbl_employee where id = #{id}
        </select>
</mapper>