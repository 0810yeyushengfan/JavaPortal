<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <!-- 配置SpringMVC的前端控制器，对浏览器发送的请求统一进行处理 -->
    <!--
        1.默认配置方式
        此配置作用下，SpringMVC的配置文件默认位于WEB-INF下，默认名称为\<servlet-name>-servlet.xml
        例如，以下配置所对应SpringMVC的配置文件位于WEB-INF下，文件名为springMVC-servlet.xml
        这种默认的配置位置是不好的，因为在Maven工程下，所有的配置文件都应该存放在resources文件夹下
        2.扩展配置方式
        可通过<init-param>标签设置SpringMVC配置文件的位置和名称，
        通过<load-on-startup>标签设置SpringMVC前端控制器DispatcherServlet的初始化时间
    -->

    <servlet>
        <servlet-name>springMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!-- 通过初始化参数指定SpringMVC配置文件的位置和名称 -->
        <init-param>
            <!-- contextConfigLocation为固定值 -->
            <param-name>contextConfigLocation</param-name>
            <!-- 使用classpath:表示从类路径查找配置文件，例如maven工程中的src/main/resources -->
            <param-value>classpath:springMVC.xml</param-value>
            <!--
                因为servlet的初始化会在第一次访问时初始化，作为框架的核心组件，在启动过程中有大量的初始化操作要做，
                而这些操作放在第一次请求时才执行会严重影响访问速度，
                因此需要通过此标签将启动控制DispatcherServlet的初始化时间提前到服务器启动时
            -->
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>springMVC</servlet-name>
        <!--
            设置springMVC的核心控制器所能处理的请求的请求路径
            /所匹配的请求可以是/login或.html或.js或.css方式的请求路径
            但是/不能匹配.jsp请求路径的请求
            因为jsp本质上也是一个servlet，它不应该由DispatcherServlet处理，而是应该由服务器中特殊的servlet来进行处理，
            一旦匹配，会不能正常显示效果，所以不能匹配
            与/*做区分，/*所匹配的请求是当前工程所有请求路径，包括.jsp请求路径

            <url-pattern>标签中使用/和/*的区别:
            /所匹配的请求可以是/login或.html或.js或.css方式的请求路径，但是/不能匹配.jsp请求路径的请求
            因此就可以避免在访问jsp页面时，该请求被DispatcherServlet处理，从而找不到相应的页面
            /*则能够匹配所有请求，例如在使用过滤器时，若需要对所有请求进行过滤，就需要使用/\*的写法
        -->
    <url-pattern>/</url-pattern>
</servlet-mapping>


        </web-app>