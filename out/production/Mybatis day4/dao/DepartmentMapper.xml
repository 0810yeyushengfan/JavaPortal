<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.DepartmentMapper">
    <!--public Department getDeptById(Integer id);-->
    <select id="getDeptById" resultType="bean.Department">
        select id,dept_name departmentName from tbl_dept where id=#{id}
    </select>

    <!--嵌套结果集的方式:使用collection标签定义关联的集合类型的属性封装规则-->
    <resultMap id="MyDept" type="bean.Department">
        <id column="did" property="id"/>
        <result column="dept_name" property="departmentName"/>
        <!--
                collection定义关联集合类型的属性的封装规则:
                ofType:指定集合里面元素的类型
                property:指定封装给JavaBean的哪个属性
        -->
        <collection property="emps" ofType="bean.Employee">
            <!--定义这个集合中单个元素的封装规则-->
            <id column="eid" property="id"/>
            <result column="last_name" property="lastName"/>
            <result column="email" property="email"/>
            <result column="gender" property="gender"/>
        </collection>
    </resultMap>
    <!--public Department getDeptByIdPlus(Integer id);-->
    <select id="getDeptByIdPlus" resultMap="MyDept">
        select d.id did,d.dept_name dept_name,e.id eid,e.last_name last_name,e.email email,e.gender gender
        from tbl_dept d
        left join tbl_employee e
        on d.id=e.d_id
        where d.id=#{id}
    </select>


    <!--
            扩展:
            1.多列的值传递过去:将多列的值封装成map传递，即column={key1=column1,key2=column2}
            2.fetchType="lazy":表示使用延迟加载
                       ="eager":表示使用立即加载



    -->
    <resultMap id="MyDeptStep" type="bean.Department">
        <id column="id" property="id"/>
        <result column="dept_name" property="departmentName"/>
        <collection
                property="emps"
                column="id"
                select="dao.EmployeeMapperPlus.getEmpsByDeptId"
                fetchType="lazy">
        </collection>
    </resultMap>
    <!--public Department getDeptByIdStep(Integer id);-->
    <select id="getDeptByIdStep" resultMap="MyDeptStep">
        select id,dept_name from tbl_dept where id=#{id}
    </select>
</mapper>