<?xml version="1.0" encoding="utf-8" ?>
<!-- xml声明:version是版本的意思,encoding是编码  -->
<!--而且这个<?xml要连在一起写,否则会有报错-->
<!--属性:-->
<!--1.version:版本号,固定值是1.0-->
<!--2.encoding:指定的字符集，是告诉解析器使用什么字符集进行解码，而编码是由文本编辑器决定的-->
<!--3.standalone="yes/no":表示这个xml文件是否是独立的xml文件-->

<!--1.什么是xml?-->
<!--xml可扩展的标记性语言。 -->
<!--2.xml的作用?-->
<!--2.1.用来保存数据，而且这些数据具有自我描述性 -->
<!--2.2.它还可以做为项目或者模块的配置文件 -->
<!--2.3.还可以做为网络传输数据的格式(现在以JSON为主)-->
<!--3.语法规则:-->
<!--3.1.XML声明要么不写，要写就写在第一行，并且前面没有任何其他字符-->
<!--3.2.只能有一个根标签-->
<!--3.3.标签必须正确结束-->
<!--3.4.标签不能交叉嵌套-->
<!--3.5.严格区分大小写-->
<!--3.6.属性必须有值，且必须加引号-->
<!--3.7.标签不能以数字开头-->
<!--3.8.注释不能嵌套-->
<!--4.当XML文档中需要写一些程序代码、SQL语句或其他不希望XML解析器进行解析的内容时，就可以写在CDATA区中-->
<!--XML解析器会将CDATA区中的内容原封不动的输出，CDATA区的定义格式:<![CDATA[…]]>-->
<!--例如:<![CDATA[select * from emp where salary > 15000]]>-->

<books> <!-- 这是xml注释 --><!--XML注释和html注释一样:--><!-- 这是html注释 -->
    <book id="SN123123413241"> <!-- book标签描述一本图书，id属性描述的是图书的编号  -->
        <name>java编程思想</name> <!-- name标签描述的是图书的信息 -->
        <author>华仔</author>        <!-- author单词是作者的意思，描述图书作者 -->
        <price>9.9</price>        <!-- price单词是价格，描述的是图书的价格 -->
    </book>
    <book id="SN12341235123">    <!-- book标签描述一本图书，id属性描述的是图书的编号  -->
        <name>葵花宝典</name>    <!-- name标签描述的是图书的信息 -->
        <author>班长</author>    <!-- author单词是作者的意思，描述图书作者 -->
        <price>5.5</price>    <!-- price单词是价格，描述的是图书的价格 -->
    </book>
</books>