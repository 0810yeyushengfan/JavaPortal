<?xml version="1.0" encoding="UTF-8"?>

        <beans xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring" xmlns:context="http://www.springframework.org/schema/context" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans">

    <!-- Spring希望管理所有的业务逻辑组件，等。。。 -->



    -<context:component-scan base-package="com.atguigu.mybatis">

    <context:exclude-filter expression="org.springframework.stereotype.Controller" type="annotation"/>

</context:component-scan>

    <!-- 引入数据库的配置文件 -->


    <context:property-placeholder location="classpath:dbconfig.properties"/>

    <!-- Spring用来控制业务逻辑。数据源、事务控制、aop -->



    -<bean class="com.mchange.v2.c3p0.ComboPooledDataSource" id="dataSource">

    <property value="${jdbc.url}" name="jdbcUrl"/>

    <property value="${jdbc.driver}" name="driverClass"/>

    <property value="${jdbc.username}" name="user"/>

    <property value="${jdbc.password}" name="password"/>

</bean>

    <!-- spring事务管理 -->



    -<bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="dataSourceTransactionManager">

    <property name="dataSource" ref="dataSource"/>

</bean>

    <!-- 开启基于注解的事务 -->


    <tx:annotation-driven transaction-manager="dataSourceTransactionManager"/>

    <!-- 整合mybatis 目的：1、spring管理所有组件。mapper的实现类。 service==>Dao @Autowired:自动注入mapper； 2、spring用来管理事务，spring声明式事务 -->


    <!--创建出SqlSessionFactory对象 -->



    -<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactoryBean">

    <property name="dataSource" ref="dataSource"/>

    <!-- configLocation指定全局配置文件的位置 -->


    <property value="classpath:mybatis-config.xml" name="configLocation"/>

    <!--mapperLocations: 指定mapper文件的位置-->


    <property value="classpath:mybatis/mapper/*.xml" name="mapperLocations"/>

</bean>

    <!--配置一个可以进行批量执行的sqlSession -->



    -<bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSession">

    <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean"/>

    <constructor-arg value="BATCH" name="executorType"/>

</bean>

    <!-- 扫描所有的mapper接口的实现，让这些mapper能够自动注入； base-package：指定mapper接口的包名 -->


    <mybatis-spring:scan base-package="com.atguigu.mybatis.dao"/>

    <!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"><property name="basePackage" value="com.atguigu.mybatis.dao"></property></bean> -->


</beans>